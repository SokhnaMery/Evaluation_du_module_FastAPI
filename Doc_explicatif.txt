1)J’ai d’abord lancé : wget https://dst-de.s3.eu-west-3.amazonaws.com/fastapi_fr/questions.csv


ce qui m’a permis d’obtenir le fichier questins.csv

2)j’ai créé un fichier exploration.py pour explorer la base de données, voici la réponse :
                                            question  ... remark
0                     Que signifie le sigle No-SQL ?  ...    NaN
1       Cassandra et HBase sont des bases de données  ...    NaN
2       MongoDB et CouchDB sont des bases de données  ...    NaN
3        OrientDB et Neo4J sont des bases de données  ...    NaN
4  Pour indexer des données textuelles, je peux u...  ...    NaN

[5 rows x 9 columns]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 76 entries, 0 to 75
Data columns (total 9 columns):
 #   Column     Non-Null Count  Dtype 
---  ------     --------------  ----- 
 0   question   76 non-null     object
 1   subject    76 non-null     object
 2   use        76 non-null     object
 3   correct    68 non-null     object
 4   responseA  76 non-null     object
 5   responseB  76 non-null     object
 6   responseC  69 non-null     object
 7   responseD  33 non-null     object
 8   remark     1 non-null      object
dtypes: object(9)
memory usage: 5.5+ KB
None
                                                 question  ...          remark
count                                                  76  ...               1
unique                                                 74  ...               1
top     Lequel de ces problème est un problème de clas...  ...  Gut feelings. 
freq                                                    2  ...               1

[4 rows x 9 columns]
['BDD' 'Systèmes distribués' 'Streaming de données' 'Docker'
 'Classification' 'Sytèmes distribués' 'Data Science' 'Machine Learning'
 'Automation']

3)Puis j’ai crée mon fichier main.py avant de faire  uvicorn main:app –reload

en faisant: uvicorn main:app --reload , mon application est lancé avec succées. J'ai la réponse suivante: app = FastAPI()
Application startup complete.
INFO:     127.0.0.1:58838 - "GET / HTTP/1.1" 200 OK

et sur l'url le essage suivant: 
{"message": "Welcome to my FastAPI application!"}

4) requests:
	Vérifier que l'API est fonctionnelle :La méthode Méthode : GET en utilisant l’url: http://127.0.0.1:8000/ 
curl -X GET http://127.0.0.1:8000/

 Request pour afficher les questions:
curl -X 'GET'   'http://127.0.0.1:8000/questions/?use=Test%20de%20positionnement&question_count=10&subjects=BDD'   -u admin:4dm1N   -H 'accept: application/json'
 renvoi la réponse suivante (la reponse est enregsitre dans le fichier selected_questions.csv): 
 {"questions":[{"question":"Que signifie le sigle No-SQL ?","subject":"BDD","use":"Test de positionnement","correct":"A","responseA":"Pas seulement SQL","responseB":"Pas de SQL",
 "responseC":"Pas tout SQL","responseD":"","remark":""},{"question":"Cassandra et HBase sont des bases de données","subject":"BDD","use":"Test de positionnement","correct":"C","responseA":"relationnelles",
 "responseB":"orientées objet","responseC":"orientées colonne","responseD":"orientées graphe","remark":""},{"question":"MongoDB et CouchDB sont des bases de données","subject":"BDD","use":"Test de positionnement",
 "correct":"B","responseA":"relationnelles","responseB":"orientées objet","responseC":"orientées colonne","responseD":"orientées graphe","remark":""},{"question":"OrientDB et Neo4J sont des bases de données",
 "subject":"BDD","use":"Test de positionnement","correct":"D","responseA":"relationnelles","responseB":"orientées objet","responseC":"orientées colonne","responseD":"orientées graphe","remark":""},{"question":"Pour indexer des données textuelles, 
 je peux utiliser","subject":"BDD","use":"Test de positionnement","correct":"A","responseA":"ElasticSearch","responseB":"Neo4J","responseC":"MySQL","responseD":"","remark":""},{"question":"A quoi faire attention lorsqu'on choisit un système de base de données ?",
 "subject":"BDD","use":"Test de positionnement","correct":"D","responseA":"La définition d'un schéma","responseB":"La rapidité de lecture/écriture","responseC":"La différenciation des accés","responseD":"Tous ces points","remark":""},{"question":"Nouvelle question",
 
"subject":"BDD","use":"Test de positionnement","correct":"A","responseA":"Réponse A","responseB":"Réponse B","responseC":"Réponse C","responseD":"Réponse D"}]}

Request pour creer une question par admin, fonctionne bien et renvoi le message suivant (la reponse est enregistre par exemple dans un fichier new_questions.csv): 
{"message":"Question created successfully"}
curl -X POST 'http://127.0.0.1:8000/questions/' -u admin:4dm1N -H 'Content-Type: application/json' -d '{
    "question": "Nouvelle question?",
    "subject": "math",
    "use": "test",
    "correct": "A",
    "responseA": "Réponse A",
    "responseB": "Réponse B",
    "responseC": "Réponse C",
    "responseD": "Réponse D"
}'

curl -X POST 'http://127.0.0.1:8000/questions/' \
  -u admin:4dm1N \
  -H 'Content-Type: application/json' \
  -d '{
    "question": "Nouvelle question?",
    "subject": "math",
    "use": "test",
    "correct": "A",
    "responseA": "Réponse A",
    "responseB": "Réponse B",
    "responseC": "Réponse C",
    "responseD": "Réponse D"
  }'

curl -X POST "http://127.0.0.1:8000/questions/" -u admin:4dm1N -H "Content-Type: application/json" -d '{
  "question": "Nouvelle question",
  "subject": "BDD",
  "use": "Test de positionnement",
  "correct": "A",
  "responseA": "Réponse A",
  "responseB": "Réponse B",
  "responseC": "Réponse C",
  "responseD": "Réponse D",
  "remark": "Remarque"
}'

	Cas ou le request ne marche pas et renvoi la réponse suivante: {"detail":"Only admin can create questions"}
curl -X POST 'http://127.0.0.1:8000/questions/'   -u alice:wonderland   -H 'Content-Type: application/json'   -d '{
    "question": "Nouvelle question?",
    "subject": "math",
    "use": "test",
    "correct": "A",
    "responseA": "Réponse A",
    "responseB": "Réponse B",
    "responseC": "Réponse C",
    "responseD": "Réponse D"
  }'

test avec identifiant non admin(pas de permission): 
curl -X POST 'http://127.0.0.1:8000/questions/' \
  -u alice:wonderland \
  -H 'Content-Type: application/json' \
  -d '{
    "question": "Nouvelle question?",
    "subject": "math",
    "use": "test",
    "correct": "A",
    "responseA": "Réponse A",
    "responseB": "Réponse B",
    "responseC": "Réponse C",
    "responseD": "Réponse D"
  }'